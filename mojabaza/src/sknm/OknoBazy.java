/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sknm;


import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Jacek Cierpka
 */
public class OknoBazy extends javax.swing.JFrame {

    /**
     * Creates new form OknoBazy
     */
    public OknoBazy() {
        initComponents();
        getConnection();
        Wyswietl_Rekordy();
    }
    
    String plikPath = null;
    int pozycja = 0;
    
    public Connection getConnection(){
    
            Connection polaczenie=null;
        try {
           polaczenie= DriverManager.getConnection("jdbc:mysql://localhost/playlista2","root","");
                return polaczenie;
        } catch (SQLException ex) {
            Logger.getLogger(OknoBazy.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Odrzucono Polaczenie");
            return null;
        }
            
    }
      
      public ArrayList<Baza> pobierzPlayliste()
    {
            ArrayList<Baza> listaPlaylisty  = new ArrayList<Baza>();
            Connection polaczenie = getConnection();
            String pytanie = "SELECT * FROM playlista";
            Statement st;
            ResultSet rs;
            try {
                st = polaczenie.createStatement();
                rs = st.executeQuery(pytanie);
                Baza playlista;
           while(rs.next())
            {
                playlista = new Baza(rs.getInt("Id_Na_Playliscie"),rs.getString("Nazwa_Artysty"),
                rs.getString("Nazwa_Utworu"),rs.getString("Lokalizacja_pliku"),rs.getString("Dlugosc_Utworu"),rs.getString("Tempo"));
                listaPlaylisty.add(playlista);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(OknoBazy.class.getName()).log(Level.SEVERE, null, ex);
        }
          return  listaPlaylisty; 
    }
      
    public void Wyswietl_Rekordy()
    {
        ArrayList<Baza> lista = pobierzPlayliste();
        DefaultTableModel model = (DefaultTableModel)zawartosc_tabeli.getModel();
        model.setRowCount(0);
        Object[] row = new Object[6];
        for(int i = 0; i < lista.size(); i++)
        {
            row[0] = lista.get(i).getId_Playlisty();
            row[1] = lista.get(i).getNazwa_Artysty();
            row[2] = lista.get(i).getNazwa_Utworu();
            row[3] = lista.get(i).getDlugosc();
            row[4] = lista.get(i).getTempo();
            row[5] = lista.get(i).getLokalizacja_Utworu();
            model.addRow(row);
        }
        
    
    }  
    public void Wyswietl_Zawartosc(int index)
    {
            pole_nr.setText(Integer.toString(pobierzPlayliste().get(index).getId_Playlisty()));
            pole_artysta.setText(pobierzPlayliste().get(index).getNazwa_Artysty());
            pole_utwor.setText(pobierzPlayliste().get(index).getNazwa_Utworu());
            pole_dlugosc.setText(pobierzPlayliste().get(index).getDlugosc());
            pole_tempo.setText(pobierzPlayliste().get(index).getTempo());
            pokaz_adres.setText(pobierzPlayliste().get(index).getLokalizacja_Utworu());
    }        
           /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        playlista2PUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("playlista2PU").createEntityManager();
        artystaQuery = java.beans.Beans.isDesignTime() ? null : playlista2PUEntityManager.createQuery("SELECT a FROM Artysta a");
        artystaList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : artystaQuery.getResultList();
        utworQuery = java.beans.Beans.isDesignTime() ? null : playlista2PUEntityManager.createQuery("SELECT u FROM Utwor u");
        utworList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : utworQuery.getResultList();
        tempoQuery = java.beans.Beans.isDesignTime() ? null : playlista2PUEntityManager.createQuery("SELECT t FROM Tempo t");
        tempoList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : tempoQuery.getResultList();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        pole_nr = new javax.swing.JTextField();
        pole_artysta = new javax.swing.JTextField();
        pole_utwor = new javax.swing.JTextField();
        pole_tempo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        zawartosc_tabeli = new javax.swing.JTable();
        guz_Adres_pliku = new javax.swing.JButton();
        guz_edytuj = new javax.swing.JButton();
        guz_usun = new javax.swing.JButton();
        guz_pierwszy = new javax.swing.JButton();
        guz_ostatni = new javax.swing.JButton();
        pole_dlugosc = new javax.swing.JTextField();
        guz_Dodaj = new javax.swing.JButton();
        pokaz_adres = new javax.swing.JTextField();
        dodaj_artyste = new javax.swing.JButton();
        dodaj_utwor = new javax.swing.JButton();
        dodaj_tempo = new javax.swing.JButton();
        usun_artyste = new javax.swing.JButton();
        usun_utwor = new javax.swing.JButton();
        usun_tempo = new javax.swing.JButton();
        pokazArtystow = new javax.swing.JComboBox<>();
        pokazUtwory = new javax.swing.JComboBox<>();
        pokazTempo = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Numer Pozycji:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Artysta:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Utwor:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Tempo:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Dlugosc:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Adres Pliku:");

        pole_nr.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        pole_nr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pole_nrActionPerformed(evt);
            }
        });

        pole_artysta.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        pole_artysta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pole_artystaActionPerformed(evt);
            }
        });

        pole_utwor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        pole_utwor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pole_utworActionPerformed(evt);
            }
        });

        pole_tempo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        pole_tempo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pole_tempoActionPerformed(evt);
            }
        });

        zawartosc_tabeli.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nr", "Artysta", "Utwor", "Dlugosc", "Tempo", "Adres Pliku"
            }
        ));
        zawartosc_tabeli.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                zawartosc_tabeliMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(zawartosc_tabeli);
        if (zawartosc_tabeli.getColumnModel().getColumnCount() > 0) {
            zawartosc_tabeli.getColumnModel().getColumn(0).setMinWidth(50);
            zawartosc_tabeli.getColumnModel().getColumn(0).setPreferredWidth(50);
            zawartosc_tabeli.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        guz_Adres_pliku.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        guz_Adres_pliku.setText("Adres");
        guz_Adres_pliku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guz_Adres_plikuActionPerformed(evt);
            }
        });

        guz_edytuj.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        guz_edytuj.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Ikony/icons/Refresh-icon.png"))); // NOI18N
        guz_edytuj.setText("Edytuj");
        guz_edytuj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guz_edytujActionPerformed(evt);
            }
        });

        guz_usun.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        guz_usun.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Ikony/icons/Remove-icon (1).png"))); // NOI18N
        guz_usun.setText("Usun");
        guz_usun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guz_usunActionPerformed(evt);
            }
        });

        guz_pierwszy.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        guz_pierwszy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Ikony/icons/first-track-icon (1).png"))); // NOI18N
        guz_pierwszy.setText("Pierwszy");
        guz_pierwszy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guz_pierwszyActionPerformed(evt);
            }
        });

        guz_ostatni.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        guz_ostatni.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Ikony/icons/last-track-icon (1).png"))); // NOI18N
        guz_ostatni.setText("Ostatni");
        guz_ostatni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guz_ostatniActionPerformed(evt);
            }
        });

        pole_dlugosc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        guz_Dodaj.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        guz_Dodaj.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Ikony/icons/Add-icon (1).png"))); // NOI18N
        guz_Dodaj.setText("Dodaj");
        guz_Dodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guz_DodajActionPerformed(evt);
            }
        });

        dodaj_artyste.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Ikony/icons/Add-icon2.png"))); // NOI18N
        dodaj_artyste.setToolTipText("");
        dodaj_artyste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dodaj_artysteActionPerformed(evt);
            }
        });

        dodaj_utwor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Ikony/icons/Add-icon2.png"))); // NOI18N
        dodaj_utwor.setToolTipText("");
        dodaj_utwor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dodaj_utworActionPerformed(evt);
            }
        });

        dodaj_tempo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Ikony/icons/Add-icon2.png"))); // NOI18N
        dodaj_tempo.setToolTipText("");
        dodaj_tempo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dodaj_tempoActionPerformed(evt);
            }
        });

        usun_artyste.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Ikony/icons/Del-icon2 — kopia.png"))); // NOI18N
        usun_artyste.setToolTipText("");
        usun_artyste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usun_artysteActionPerformed(evt);
            }
        });

        usun_utwor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Ikony/icons/Del-icon2 — kopia.png"))); // NOI18N
        usun_utwor.setToolTipText("");
        usun_utwor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usun_utworActionPerformed(evt);
            }
        });

        usun_tempo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Ikony/icons/Del-icon2 — kopia.png"))); // NOI18N
        usun_tempo.setToolTipText("");
        usun_tempo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usun_tempoActionPerformed(evt);
            }
        });

        pokazArtystow.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, artystaList, pokazArtystow);
        bindingGroup.addBinding(jComboBoxBinding);

        pokazArtystow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pokazArtystowActionPerformed(evt);
            }
        });

        pokazUtwory.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, utworList, pokazUtwory);
        bindingGroup.addBinding(jComboBoxBinding);

        pokazUtwory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pokazUtworyActionPerformed(evt);
            }
        });

        pokazTempo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tempoList, pokazTempo);
        bindingGroup.addBinding(jComboBoxBinding);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Przegladaj w bazie: artysci / utwory / tempa");
        jLabel7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Zawartosc pozycji bazie");
        jLabel8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(guz_Adres_pliku)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pokaz_adres))
                            .addComponent(pole_dlugosc, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(pole_tempo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dodaj_tempo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(usun_tempo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(pokazTempo, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pole_artysta, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(pole_utwor, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(pole_nr))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dodaj_utwor, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dodaj_artyste, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(usun_artyste, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(171, 171, 171))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(pokazArtystow, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(241, 241, 241))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(usun_utwor, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(pokazUtwory, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(guz_edytuj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(guz_pierwszy, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(guz_ostatni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(guz_Dodaj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(guz_usun, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 796, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 783, Short.MAX_VALUE)
                        .addGap(15, 15, 15)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pole_nr, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pole_artysta, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(dodaj_artyste, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(usun_artyste, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(pokazArtystow, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(pole_utwor, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(usun_utwor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pokazUtwory, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(dodaj_utwor, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(pole_tempo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(dodaj_tempo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usun_tempo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pokazTempo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pole_dlugosc))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guz_Adres_pliku, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pokaz_adres))
                .addGap(37, 37, 37)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(guz_Dodaj)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(guz_edytuj)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(guz_usun)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(guz_pierwszy)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(guz_ostatni))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(73, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pole_nrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pole_nrActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pole_nrActionPerformed

    private void pole_artystaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pole_artystaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pole_artystaActionPerformed

    private void pole_utworActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pole_utworActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pole_utworActionPerformed

    private void pole_tempoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pole_tempoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pole_tempoActionPerformed

    private void guz_Adres_plikuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guz_Adres_plikuActionPerformed
        JFileChooser file=new JFileChooser();
        file.setCurrentDirectory(new File(System.getProperty("user.home")));
  
        int result = file.showSaveDialog(null);
        if(result == JFileChooser.APPROVE_OPTION)
        {
            File selectedFile = file.getSelectedFile();
            String sciezka = selectedFile.getAbsolutePath();
            plikPath=sciezka;
            pokaz_adres.setText(plikPath);
        }
        else{
            System.out.println("Nie wybrano pliku");
        }
    }//GEN-LAST:event_guz_Adres_plikuActionPerformed

    private void guz_DodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guz_DodajActionPerformed
       System.out.println("sciezka: "+pokaz_adres);
        if ( pokaz_adres != null){
            Connection polaczenie=getConnection();
            System.out.println("weszlo");
                try {
                    PreparedStatement ps= polaczenie.prepareStatement("INSERT INTO playlista(id_Na_Playliscie,Nazwa_Artysty,Nazwa_Utworu,Lokalizacja_pliku, Dlugosc_Utworu, Tempo) VALUES(?,?,?,?,?,?)");
                    ps.setString(1, pole_nr.getText()); 
                    ps.setString(2, pole_artysta.getText());
                    ps.setString(3, pole_utwor.getText());
                    ps.setString(4, pokaz_adres.getText());
                    ps.setString(5, pole_dlugosc.getText());
                    ps.setString(6, pole_tempo.getText());
                    ps.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Utworzono pozycje");
                } catch (SQLException ex) {
                Logger.getLogger(OknoBazy.class.getName()).log(Level.SEVERE, null, ex);
                }
           
            }else{
                   JOptionPane.showMessageDialog(null,"Jedno lub wiecej pol jest puste" );
                }
            System.out.println("art: "+pole_artysta.getText());
            System.out.println("utw: "+pole_utwor.getText());
            System.out.println("temp: "+pole_tempo.getText());
            System.out.println("dlug: "+pole_dlugosc.getText());
            System.out.println("sciezka: "+pokaz_adres.getText());
    }//GEN-LAST:event_guz_DodajActionPerformed

    private void guz_edytujActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guz_edytujActionPerformed
        
        if(pole_nr != null){
            String OdswiezPytanie = null;
            PreparedStatement ps = null;
            Connection polaczenie = getConnection();
          
                 
                try { 
                    OdswiezPytanie= "UPDATE playlista SET Nazwa_Artysty=?, Nazwa_Utworu=?, Lokalizacja_pliku=?, Dlugosc_Utworu=?, Tempo=? WHERE Id_Na_Playliscie=?";
                    ps = polaczenie.prepareStatement(OdswiezPytanie);
                    
                     ps.setString(1, pole_artysta.getText());
                     ps.setString(2, pole_utwor.getText());
                     ps.setString(3, pokaz_adres.getText());
                     ps.setString(4, pole_dlugosc.getText());
                     ps.setString(5, pole_tempo.getText());
                     ps.setInt(6, Integer.parseInt(pole_nr.getText()));
                     ps.executeUpdate();
                     JOptionPane.showMessageDialog(null, "Zmodyfikowano pozycje");
                } catch (SQLException ex) {
                    Logger.getLogger(OknoBazy.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{JOptionPane.showMessageDialog(null, "Jedno lub wiecej pol jest puste");}
                
           
        
       
    }//GEN-LAST:event_guz_edytujActionPerformed

    private void guz_usunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guz_usunActionPerformed
        
        if(!pole_nr.getText().equals("")){
            try {
                Connection polaczenie = getConnection();
                PreparedStatement ps = polaczenie.prepareStatement("DELETE FROM playlista WHERE Id_Na_Playliscie=?");
                int id = Integer.parseInt(pole_nr.getText());
                ps.setInt(1,id);
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Usunieto pozycje");
            } catch (SQLException ex) {
                Logger.getLogger(OknoBazy.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Nie udalo sie usunac pozycji");
            }
        }else{JOptionPane.showMessageDialog(null, "Nie udalo sie usunac pozycji. Prosze podac id utworu  ");}
    }//GEN-LAST:event_guz_usunActionPerformed

    private void zawartosc_tabeliMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_zawartosc_tabeliMouseClicked
        int index = zawartosc_tabeli.getSelectedRow();
        Wyswietl_Zawartosc(index);
    }//GEN-LAST:event_zawartosc_tabeliMouseClicked

    private void guz_pierwszyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guz_pierwszyActionPerformed
         pozycja = 0;
        Wyswietl_Zawartosc(pozycja);
    }//GEN-LAST:event_guz_pierwszyActionPerformed

    private void guz_ostatniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guz_ostatniActionPerformed
        pozycja = pobierzPlayliste().size()-1;
        Wyswietl_Zawartosc(pozycja);
    }//GEN-LAST:event_guz_ostatniActionPerformed

    private void dodaj_artysteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dodaj_artysteActionPerformed
        Connection polaczenie=getConnection();
            System.out.println("weszlo");
                try {PreparedStatement ps= polaczenie.prepareStatement("INSERT INTO artysta(Nazwa_Artysty) VALUES(?)");
                    ps.setString(1, pole_artysta.getText());
                    ps.executeUpdate();                       
                  } catch (SQLException ex) {
                       Logger.getLogger(OknoBazy.class.getName()).log(Level.SEVERE, null, ex);
                    }
        
    }//GEN-LAST:event_dodaj_artysteActionPerformed

    private void dodaj_utworActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dodaj_utworActionPerformed
        System.out.println("sciezka: "+pokaz_adres);
        if ( pokaz_adres != null){
            Connection polaczenie=getConnection();
            System.out.println("weszlo");
        try {PreparedStatement ps= polaczenie.prepareStatement("INSERT INTO utwor(Nazwa_Utworu,Dlugosc_Utworu,Lokalizacja_pliku) VALUES(?,?,?)");
                       ps.setString(1, pole_utwor.getText());
                       ps.setString(2, pole_dlugosc.getText());
                       ps.setString(3, pokaz_adres.getText());
                       ps.executeUpdate();
                   } catch (SQLException ex) {
                       Logger.getLogger(OknoBazy.class.getName()).log(Level.SEVERE, null, ex);
                   }
        }
    }//GEN-LAST:event_dodaj_utworActionPerformed

    private void dodaj_tempoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dodaj_tempoActionPerformed
        
            Connection polaczenie=getConnection();
            System.out.println("weszlo");
            
                   try {PreparedStatement ps= polaczenie.prepareStatement("INSERT INTO tempo(Tempo) VALUES(?)");
                       ps.setString(1, pole_tempo.getText());
                       ps.executeUpdate();
                       
                   } catch (SQLException ex) {
                       Logger.getLogger(OknoBazy.class.getName()).log(Level.SEVERE, null, ex);
                   }
    }//GEN-LAST:event_dodaj_tempoActionPerformed

    private void usun_artysteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usun_artysteActionPerformed
       if(!pole_artysta.getText().equals("")){
            try {
                Connection polaczenie = getConnection();
                PreparedStatement ps = polaczenie.prepareStatement("DELETE FROM artysta WHERE Nazwa_Artysty=?");
                String art = pole_artysta.getText();
                ps.setString(1,art);
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Usunieto pozycje");
            } catch (SQLException ex) {
                Logger.getLogger(OknoBazy.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Nie udalo sie usunac pozycji");
            }
        }else{JOptionPane.showMessageDialog(null, "Nie udalo sie usunac pozycji. Prosze podac nazwe artysty utworu  ");}
    }//GEN-LAST:event_usun_artysteActionPerformed

    private void usun_utworActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usun_utworActionPerformed
       if(!pole_utwor.getText().equals("") && !pole_dlugosc.getText().equals("") && !pokaz_adres.getText().equals("")){
            try {
                Connection polaczenie = getConnection();
                PreparedStatement ps = polaczenie.prepareStatement("DELETE FROM utwor WHERE Lokalizacja_pliku=?");
                String adr = pokaz_adres.getText();
                ps.setString(1, adr);
               
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Usunieto pozycje");
            } catch (SQLException ex) {
                Logger.getLogger(OknoBazy.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Nie udalo sie usunac pozycji");
            }
        }else{JOptionPane.showMessageDialog(null, "Nie udalo sie usunac pozycji. Prosze podac nazwe artysty utworu  ");}
    }//GEN-LAST:event_usun_utworActionPerformed

    private void usun_tempoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usun_tempoActionPerformed
       if(!pole_tempo.getText().equals("")){
            try {
                Connection polaczenie = getConnection();
                PreparedStatement ps = polaczenie.prepareStatement("DELETE FROM tempo WHERE Tempo=?");
                String tem = pole_tempo.getText();
                ps.setString(1,tem);
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Usunieto pozycje");
            } catch (SQLException ex) {
                Logger.getLogger(OknoBazy.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Nie udalo sie usunac pozycji");
            }
        }else{JOptionPane.showMessageDialog(null, "Nie udalo sie usunac pozycji. Prosze podac tempo utworu  ");}
    }//GEN-LAST:event_usun_tempoActionPerformed

    private void pokazUtworyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pokazUtworyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pokazUtworyActionPerformed

    private void pokazArtystowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pokazArtystowActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pokazArtystowActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OknoBazy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OknoBazy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OknoBazy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OknoBazy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OknoBazy().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.util.List<sknm.Artysta> artystaList;
    private javax.persistence.Query artystaQuery;
    private javax.swing.JButton dodaj_artyste;
    private javax.swing.JButton dodaj_tempo;
    private javax.swing.JButton dodaj_utwor;
    private javax.swing.JButton guz_Adres_pliku;
    private javax.swing.JButton guz_Dodaj;
    private javax.swing.JButton guz_edytuj;
    private javax.swing.JButton guz_ostatni;
    private javax.swing.JButton guz_pierwszy;
    private javax.swing.JButton guz_usun;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.persistence.EntityManager playlista2PUEntityManager;
    private javax.swing.JComboBox<String> pokazArtystow;
    private javax.swing.JComboBox<String> pokazTempo;
    private javax.swing.JComboBox<String> pokazUtwory;
    private javax.swing.JTextField pokaz_adres;
    private javax.swing.JTextField pole_artysta;
    private javax.swing.JTextField pole_dlugosc;
    private javax.swing.JTextField pole_nr;
    private javax.swing.JTextField pole_tempo;
    private javax.swing.JTextField pole_utwor;
    private java.util.List<sknm.Tempo> tempoList;
    private javax.persistence.Query tempoQuery;
    private javax.swing.JButton usun_artyste;
    private javax.swing.JButton usun_tempo;
    private javax.swing.JButton usun_utwor;
    private java.util.List<sknm.Utwor> utworList;
    private javax.persistence.Query utworQuery;
    private javax.swing.JTable zawartosc_tabeli;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
